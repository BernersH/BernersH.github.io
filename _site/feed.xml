<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ben3rsH Blog</title>
    <description></description>
    <link>bernersh.github.io/</link>
    <atom:link href="bernersh.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 19 Jan 2016 00:25:59 +0800</pubDate>
    <lastBuildDate>Tue, 19 Jan 2016 00:25:59 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>浅尝web app拍照翻转问题</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“别告诉我那地方在哪，否则世界就小了”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;初遇&lt;/h2&gt;
&lt;p&gt;今天在写简历的时候，看着自己写上的那些熟悉而又陌生的名字：兼职联盟，一块推，又想到了暑假里的那段时光。那段时光有苦有乐，但是是十分充实的，毋庸置疑，以后可能有空的时候写篇文章，纪念一下，或者做成阶段性更新的形式，也算是一种个人日记吧。等以后写了，我再把链接贴过来。&lt;/p&gt;

&lt;p&gt;偶间想起，当时好像有个问题，没有解决。那是在做&lt;a href=&quot;https://github.com/BernersH/yikuaitui&quot; title=&quot;yikuaitui&quot;&gt;一块推&lt;/a&gt;的时候，这也算是我第一个独立完成的前端项目。这是一个web app，页面全是html＋css＋js实现的。那时候js刚自己充分实践，用的是一个也是刚学的学长推荐的&lt;a href=&quot;http://dcloud.io/&quot; title=&quot;HBuilder&quot;&gt;HBuilder编译器&lt;/a&gt;和它内置的框架&lt;a href=&quot;http://dev.dcloud.net.cn/mui/&quot; title=&quot;mui&quot;&gt;mui&lt;/a&gt;，这是国产的编译器和框架，框架就是为了做接近原生的web app，内置很多对于移动端的优化。其实这个编译器和框架还是挺不错的，支持国产，就是小bug有点多，而且在我的电脑上卡，当时还是用了3年的老联想。。。&lt;/p&gt;

&lt;p&gt;当时我们需要做一个用户拍照或者从相册获取并预览的页面，当时也很小白（说的好像现在不是一样。。。），直接在内置的mui demo里找有这个功能的，就把他套过来，当然那个地方只有前端的，没有ajax数据传输的。后来我钻研了一下，加了和后台对接的部分，转换成64位base传给后端的，这里没问题。但是，经过测试发现问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;无论是Android还是iOS，只要选择在拍照之后，横过来拍，出来的预览图片都是翻转90度的 &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是相关代码:&lt;/p&gt;

&lt;p&gt;HTML (嗯，当时要做那个页面要能让用户最多上传9个图片，我也没想到什么好的动态移动那个添加按钮的办法，就用死办法，先在页面上安置9个按钮，然后添加一个，使原来的那个按钮［加号图片］失效，然后再使下一个显示（机智如我。。。））&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	 &amp;lt;div class=&quot;things&quot; id=&quot;headimg&quot;&amp;gt;
	 &amp;lt;div id=&quot;get1&quot; class=&quot;addphoto1 &quot; onclick=&quot;addphoto(1)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo1&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get2&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(2)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo2&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get3&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(3)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo3&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get4&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(4)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo4&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get5&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(5)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo5&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get6&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(6)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo6&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get7&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(7)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo7&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get8&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(8)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo8&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;div id=&quot;get9&quot; class=&quot;addphoto transparent&quot; onclick=&quot;addphoto(9)&quot;&amp;gt;
	 &amp;lt;img id=&quot;photo9&quot; src=&quot;Myicon/add icon.png&quot; /&amp;gt;
	 &amp;lt;/div&amp;gt;
	 &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JS&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 	mui(&#39;body&#39;).on(&#39;shown&#39;, &#39;.mui-popover&#39;, function(e) {});
 	mui(&#39;body&#39;).on(&#39;hidden&#39;, &#39;.mui-popover&#39;, function(e) {});
	
	            function addphoto(photoid) {
	                if (hasClass(imgdiv[photoid - 1], &#39;transparent&#39;)) {} 
	                else {
	                    var btnArray = [{
	                        title: &quot;使用手机拍照&quot;
	                    }, {
	                        title: &quot;从相册中选择&quot;
	                    }];
	                    plus.nativeUI.actionSheet({
	                        title: &quot;添加图片&quot;,
	                        cancel: &quot;取消&quot;,
	                        buttons: btnArray
	                    }, function(e) {
	                        var index = e.index;
	                        switch (index) {
	                            case 0:
	                                break;
	                            case 1:
	                                getImage(photoid);
	                                break;
	                            case 2:
	                                galleryImgs(photoid);
	                                break;
	                        }
	                    });
	                }
	            }
	            var ifphoto = {
	                &quot;ifid&quot;: [{
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }, {
	                    &quot;id&quot;: 0
	                }]
	            }
	            var imgflag=0;
	
	            function getImage(photoid) {
	                imgflag=1;
	
	
	                    var cmr = plus.camera.getCamera();
	                    cmr.captureImage(function(p) {
	                        plus.io.resolveLocalFileSystemURL(p, function(entry) {
	                            var localurl = entry.toLocalURL();
	                            var phototempid = &#39;photo&#39; + photoid;
	                            document.getElementById(phototempid).src = localurl;
	                            appendFile(localurl, photoid);
	                            $(imgdiv[photoid]).removeClass(&#39;transparent&#39;);
	                        });
	                    });
	                }
	                //相册选取
	
	
	            function galleryImgs(photoid) {
	                imgflag=0;
	
	                plus.gallery.pick(function(e) {
	                    var phototempid = &#39;photo&#39; + photoid;
	                    document.getElementById(phototempid).src = e.files;
	                    appendFile(e, photoid);
	                    $(imgdiv[photoid]).removeClass(&#39;transparent&#39;);
	                });
	            }
	            var f1 = null;
	
	            function appendFile(path, photoid) {
	                var img = new Image();
	                img.src = path;
	                img.onload = function() {
	                    var that = this;
	                    //生成比例 
	                    var w = that.width,
	                        h = that.height,
	                        scale = w / h;
	
	                    w = 480 || w;
	                    h = w / scale;
	                    //生成canvas
	
	
	                    var canvas = document.createElement(&#39;canvas&#39;);
	
	                    var ctx = canvas.getContext(&#39;2d&#39;);
	                    $(canvas).attr({
	                        width: w,
	                        height: h
	                    });
	                    //旋转
	
	
	
	
	
	    var image1 = new Image();
	
	      // regular rotation about center
	      var xpos = canvas.width/2;
	      var ypos = canvas.height/2;
	      ctx.drawImage(image1, xpos - image1.width / 2, ypos - image1.height / 2);
	
	      ctx.translate(xpos, ypos);
	      ctx.rotate(450* Math.PI / 180);//旋转450度
	      ctx.translate(-xpos, -ypos);
	      ctx.drawImage(image1, xpos - image1.width / 2, ypos - image1.height / 2);
	    //旋转结束
	            };  
	                ctx.drawImage(that, 0, 0, w, h);
	
	                    var base64 = canvas.toDataURL(&#39;image/jpeg&#39;, 0.6 || 0.6); //1最清晰，越低越模糊。
	                    f1 = base64;
	                    f1 = f1.replace(/data:image\/jpeg;base64,/, &quot;&quot;);
	                    var phototempid = &#39;photo&#39; + photoid;
	                    var pic = document.getElementById(phototempid);
	                    pic.src = base64;
	                    newupload();
	                }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-1&quot;&gt;解决&lt;/h2&gt;

&lt;h4 id=&quot;section-2&quot;&gt;一筹莫展&lt;/h4&gt;

&lt;p&gt;后来，二话不说，毕竟咱在网上最熟练的事儿就是：搜索。我想，今年web app这么火，应该有很多人遇到过这个问题，会有人解答的。但是，真的找不到，当时也不认识大神，也不混社区（现在也没怎么混。。。）所以原来还想搞清原理，但是实在没办法了，之后想了想直接找解决方法。于是想通过判定长与宽的大小来判断照片是竖着拍还是横着拍，然后&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial/Transformations&quot; title=&quot;canvas旋转&quot;&gt;通过canvas来实施旋转&lt;/a&gt;，但是我也不知道是为什么。后来恰好设计师改了设计稿，上传图片不需要预览了，于是就直接让图片在后端旋转了。于是这个问题一直没解决。。。一晃3，4个月过去了，回忆那时候的岁月，也想到了这个问题。不甘心的滋味涌上心头，于是我又把当时的代码拿出来，测试一下，果然在最新的iOS9上还是这样的。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;初见曙光&lt;/h4&gt;
&lt;p&gt;又开始了疯狂查找解决资料的过程，后来忙活了一天（虽然有时候有点懒，但是对于有 bug的情况我还是很上心的，记得有次一个bug卡了5天，饭也没怎么吃，觉也没咋睡，天天熬夜，仿佛执念），终于找到了腾讯TGideas的这篇文章：&lt;a href=&quot;http://tgideas.qq.com/webplat/info/news_version3/804/7104/7106/m5723/201409/278736.shtml&quot; title=&quot;解决图片翻转&quot;&gt;《H5拍照应用开发经历的那些坑儿》&lt;/a&gt;。里面第一个坑就是照片翻转问题:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;问题描述：&lt;br /&gt;
 手持设备不同方向所拍摄的照片方向不同，照片的方向都会不同，但相册中会自动纠正，这一问题在ios和android中都存在。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;问题解决：&lt;br /&gt;
1、将图片数据转换成二进制数据，方便获取图片的exif信息；（这里我引入了 &lt;a href=&quot;https://code.google.com/p/allyourbase64/source/browse/js/binaryajax.js?r=2cd816ecbebbb7f80012c9b4df4c1fe3292fc66d&quot; title=&quot;Binary Ajax&quot;&gt;Binary Ajax&lt;/a&gt;）&lt;br /&gt;
2、获取图片的exif信息；（这里我使用了 &lt;a href=&quot;https://gist.github.com/christopherdebeer/3743287&quot; title=&quot;exif.js&quot;&gt;Javascript EXIF Reader&lt;/a&gt;）&lt;br /&gt;
3、通过图片exif信息，获取图片拍摄时所持设备方向orientation。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;他的代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// 读取图片数据
	var fr = new FileReader();
	fr.readAsDataURL(file); 
	
	fr.onload = function(fe){ 
	    var result = this.result;
	    var img = new Image();
	 var exif;
	    img.onload = function() {
	        var orientation = exif ? exif.Orientation : 1;
	        // 判断拍照设备持有方向调整照片角度
	        switch(orientation) {
	            case 3: 
	                imgRotation = 180; 
	                break;
	            case 6: 
	                imgRotation = 90; 
	                break;
	            case 8: 
	                imgRotation = 270; 
	            break;
	        }
	    };
	
	    // 转换二进制数据
	    var base64 = result.replace(/^.*?,/,&#39;&#39;);
	    var binary = atob(base64); 
	    var binaryData = new BinaryFile(binary);
	
	    // 获取exif信息
	    exif = EXIF.readFromBinaryFile(binaryData);
	
	    img.src = result;
	};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh,原来是这个exif在搞鬼，懂了懂了。等等，exif是个什么鬼，于是万能的Google告诉了我答案：&lt;a href=&quot;http://baike.baidu.com/view/22006.htm&quot; title=&quot;exif&quot;&gt;exif&lt;/a&gt;（照顾国情，我把链接换成了百度百科的）。总的来说，exif就是一种图片格式，但是它比普通的图片格式多了很多参数，eg.光圈 快门 白平衡，还有就是照片的方向，所以腾讯的大大们就获取了这个参数并将他给了照片，照片就可以像从照片库里选出来的一样，可以正常翻转啦。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;意外发现&lt;/h4&gt;
&lt;p&gt;在读他们的代码时，我发现一个FileReader()和readAsDataURL()，原谅我浅薄，虽然眼熟，但是不知道怎么用，于是还是查查查：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL&quot; title=&quot;FileReader&quot;&gt;FileReader.readAsDataURL()&lt;/a&gt;（今天才发现&lt;a href=&quot;https://developer.mozilla.org/en-US/#&quot; title=&quot;MDN&quot;&gt;MDN&lt;/a&gt;真是好东西，以后一定要多逛逛，把它用起来）页面里面有个demo&lt;/p&gt;

&lt;p&gt;HTML&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	&amp;lt;input type=&quot;file&quot; onchange=&quot;previewFile()&quot;&amp;gt;&amp;lt;br&amp;gt;
	&amp;lt;img src=&quot;&quot; height=&quot;200&quot; alt=&quot;Image preview...&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JS&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     function previewFile() {
	  var preview = document.querySelector(&#39;img&#39;);
	  var file    = document.querySelector(&#39;input[type=file]&#39;).files[0];
	  var reader  = new FileReader();
	
	  reader.onloadend = function () {
	    preview.src = reader.result;
	  }
	
	  if (file) {
	    reader.readAsDataURL(file);
	  } else {
	    preview.src = &quot;&quot;;
	  }
	}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了看看效果，我在现在电脑上测试之后，顺手用Mac版的HBuilder运行了真机测试（目前还不知道现在用的WebStorm如何做移动端的真机测试，Mark一下，以后再查查），我惊奇的发现，它竟然可以直接识别手机，然后有拍照和照片库两个选项，下面甚至可以关联到我的app:File Manager。而且是手机本身好看的UI，如果你看我原来的代码，就会发现，我原来这个弹出选项，还是用的&lt;a href=&quot;http://www.dcloud.io/docs/api/zh_cn/nativeui.html&quot; title=&quot;HTML5＋&quot;&gt;HTML5+ API Reference&lt;/a&gt;的native UI的选项按钮，比较丑不协调。经过测试，横拍后竟然不翻转了，于是我像发现了新大陆，把所有的按钮换为了input。&lt;br /&gt;
终于把这个问题解决了，处女座表示终于舒服了。。。不然有的照片正，有的照片反，真的难受，哈哈。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;后记&lt;/h2&gt;
&lt;p&gt;虽然这个项目早就交付了，可能因为也没有做多少项目。对于自己的每个项目和包括自己的博客，都像自己的孩子一样，想让他们尽善尽美。毕竟，这都是自己一行行码出来的。可能代码有bug，不够优雅，页面不好看。但是，他们也是我慢慢成长的唯一的见证，那些夜晚唯一的陪伴（包括现在，夜又深了，但是就是想今天解决完问题，今天把博文写完。可能是刚开始，兴趣比较大，但是希望自己能够坚持下去，把自己认为值得和别人分享的，都努力地在自己的一亩三分田力发光发热）。今天一天虽然过的挺累的，但是有着无比的满足感，同时感觉自己真的还欠缺许多，未来还有很多自己要去看学，去看，去敲。世界上真的，总有那么多比你聪明的人还比你努力，一起がんばって(加油)吧！&lt;/p&gt;

&lt;p&gt;以上。&lt;/p&gt;

&lt;p&gt;－－Bern3rsH写于2015.12.22&lt;/p&gt;

</description>
        <pubDate>Tue, 22 Dec 2015 09:12:00 +0800</pubDate>
        <link>bernersh.github.io/2015/12/22/photo/</link>
        <guid isPermaLink="true">bernersh.github.io/2015/12/22/photo/</guid>
        
        <category>FE2</category>
        
        <category>HTML</category>
        
        <category>JS</category>
        
        <category>Mobile</category>
        
        
      </item>
    
      <item>
        <title>Glad to see you here</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“前进！不择手段地前进！！”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;终于有个自己的地方，网上的家？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#build&quot;&gt;直接看博客技术的实现，gogogo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一直憧憬着，能够有这么个地方，能够记录有时脑子坏了的自己那些云波诡谲的想法，还有作为一个把全栈工程师当作未来目标的自己对于技术的一点看法和感悟，听和看无数的大牛说过要搞自己的技术博客。而临到想写时，那些CSDN，博客园之类的，可能时和设计师交朋友交得多了，审美也挑剔了起来，觉得那些博客网站太丑了。恰好做的前端，于是一直想自己折腾一个“部落格”，但是一直都太懒了，还有觉得自己水平并不能做出自己满意的作品。&lt;/p&gt;

&lt;p&gt;直到想要去公司寒假实习的时候，猛然发现自己没有什么拿得出手的东西，仅仅只有github上那几个差劲的项目。慌张起来，于是花了几天，也算是了却一桩心愿，以后也有了自己的“自留地”。&lt;/p&gt;

&lt;p id=&quot;build&quot;&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-1&quot;&gt;技术实现&lt;/h2&gt;

&lt;p&gt;暑假的时候也动过写博客的念头，因后来忙于外包，也就没时间做，放弃了。不过也google了许多相关的资料，以前就很喜欢看阮老师的博客，恰巧里面有一篇&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;《搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门》&lt;/a&gt;觉得很对胃口，于是就决定使用&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;+&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;来搭建我的“小窝”。这是Jekyll的&lt;a href=&quot;http://jekyllcn.com/&quot;&gt;中文文档网站&lt;/a&gt;,里面详细介绍了关于jekyll的一些指令和配置。&lt;/p&gt;

&lt;p&gt;这样做的好处，显而易见：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; 对于我来说，这是一个很好的契机去学习这门让我的写作变得优雅起来的语言，名号早已如雷贯耳，却一直没用过。&lt;a href=&quot;http://wowubuntu.com/markdown/&quot;&gt;Markdown语法说明&lt;/a&gt;而Github Pages推荐使用的Markdown解释器是kramdown，与一般的Markdown语法又有所不同，但也不需要过分纠结。这是&lt;a href=&quot;https://github.com/flyaway1217/flyaway1217.github.com/blob/master/_drafts/Kramdown-Syntax.md&quot;&gt;kramdown的中文文档&lt;/a&gt;(这是我从别人Github Pages博客的draft(草稿)里找到的，我也是蛮拼的)。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;无需&lt;strong&gt;数据库&lt;/strong&gt;、&lt;strong&gt;评论功能&lt;/strong&gt;，不需要不断的更新版本——只用关心你的博客内容。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;只需使用Github的发布功能，就&lt;strong&gt;Blog Post&lt;/strong&gt;,加深了Github的使用（虽然我基本都是用的Mac的Github桌面版。。。）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有很多很多的模版供你选择，还可以自己随意更改&lt;/p&gt;

    &lt;p&gt;额，Jekyll＋Github Pages最大的问题。还是&lt;strong&gt;GFW&lt;/strong&gt;(俗称的墙）的问题（手动再见）`&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;github服务器访问过慢,不过还好可以忍受&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jekyll的默认插件Disqus使用的都是国内无法使用的Facebook,Twitter等的帐号，而国内的评论插件多说，有言等的评论框真的太丑了。。。稍微逼格高点的模版就会有深深的违和感，所以暂时还没有做评论，以后考虑考虑再说,我试用了&lt;a href=&quot;http://share.baidu.com/&quot;&gt;百度分享&lt;/a&gt;来做分享功能，十分方便，只要在post布局页面插入HTML和JS语句即可，会自动变成图标进行分享，唯一的不足可能是灰色主题的微信图标有bug（见&lt;a href=&quot;#bug&quot;&gt;文底&lt;/a&gt;)和印象笔记图标不显示（手动再见）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jekyll的安装在国内真心太慢了，我目前翻墙只是用&lt;a href=&quot;https://github.com/XX-net/XX-Net&quot;&gt;XX-Net&lt;/a&gt;配合Chrome里的&lt;a href=&quot;https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon&quot;&gt;Proxy SwitchyOmega&lt;/a&gt;插件，没有全局的VPN，所以按照Jekyll文档安装的时候速度奇慢，貌似是被墙了&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面就是我遇到几个&lt;strong&gt;问题&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;安装Jekyll。&lt;a href=&quot;http://jekyll.bootcss.com/docs/installation/&quot;&gt;Jekyll的安装文档&lt;/a&gt;里面说的是用&lt;code&gt;gem install jekyll&lt;/code&gt;来安装，然后Mac自带了Ruby和gem。但是，现实是残酷的，怎么也不成功。后来在&lt;a href=&quot;http://www.cnblogs.com/kaiye/archive/2013/04/24/3039345.html&quot;&gt;Mac下搭建jekyll环境&lt;/a&gt;里才发现自带的版本是过低的，无法安装Jekyll，而且后来需要替换成淘宝的镜像才能正常速度安装Jekyll。具体操作他的博文里都有&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用的别人的模版配置问题。我的博客大的主题是fork的&lt;a href=&quot;https://github.com/Huxpro/huxblog-boilerplate&quot;&gt;Hux同学（学习的榜样）Blog的Boilerplate&lt;/a&gt;，但是在配置的时候要注意_config.yml里的url和baseurl。&lt;strong&gt;你是用户和组织的站点（username.github.io)下master的分支还是username.github.io下的新建项目的分支&lt;/strong&gt;。 如果是前者，那么直接将Jekyll的文件夹commit到master分支上;如果是后者，先在username.github.io下添加gh-pages分支，然后在_config.yml里在baseurl添加/project-name（注意必须存在头部的斜杠以及不能有尾部的斜杠。）还有就是Jekyll的本地文件夹里的CNAME记得修改为自己博客的网址，不然Github在build你的页面的时候会失败，发邮件给你（亲测，哈哈)。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文件编码问题。貌似因为Jekyll的编码问题，所以博文的标题是不能用中文的，而且整个博文的编码也必须是UTF-8，windows平台记得不能带BOM字符。我就因为不小心用sublime打开了博文，改变了编码导致全部乱码，而且Github Pages也是无法识别非UTF-8编码的文章，因为这个又收到亲爱的Github的邮。（它一定是爱上我了，嗯，准是这样）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置文件问题。要搞懂_config.yml里面各个变量的&lt;strong&gt;实际意义&lt;/strong&gt;。eg.featured-condition-size这个变量默认配置为1，也就是说起码要有两篇文章是某一个标签，这个标签才会显示在FEATURED TAGS处，我自己就因为这个原因浪费了好多时间。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后续添加问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;要在yml配置文件里添加 &lt;code&gt;future:true&lt;/code&gt;,否则不能发布超过当天的博文（貌似还有时差，美国时间为准）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当你把Jekyll安装完，本地修改调试完，就可以将文件夹commit到你的username.github.io仓库的master下啦。大概过10分钟，你就可以在&lt;strong&gt;username.github.io&lt;/strong&gt;（默认）这个网址下中二地看着自己的博客(孩)页面(子)了。&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-2&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;这是我第一次写markdown的文档（囧），一边看一边要查询语法，也是第一次写这种教授类的文章，觉得更加佩服那些写了很多博文的技术大牛。写的时候你需要不断回忆当时所遇到的问题，还要去找一下当时解决所用的网址和方法。但是在搭建这个博客的过程中，也学习了很多，更熟练的用Boostrap，用Jekyll的layout可以快速定制每个页面的排版等。&lt;/p&gt;

&lt;p&gt;正是这样，一篇小小的开博文，几乎耗去了我一个下午的时间。。。于是以后一定要养成遇到问题随手把问题和解决方法记录在Evernote上，然后觉得有价值的来这里与大家分享。希望自己能够坚持把，虽然现在关于前端的博客一大把。。。但是，我会竭尽我自己一点小小的能力写出一点东西(比如这个博客本身的代码实现我有些地方还不太明白，研究之后再写一点东西）。这如最前面所说的&lt;a href=&quot;http://book.douban.com/subject/2567698/&quot;&gt;《三体》&lt;/a&gt;里的名言”前进!不择手段的前进!!”，也不枉现在度过的这些美好的青春时光。&lt;/p&gt;

&lt;p&gt;以上。&lt;/p&gt;

&lt;p id=&quot;bug&quot;&gt;&lt;/p&gt;
&lt;p&gt;－－Bern3rsH写于2015.12.16&lt;/p&gt;

</description>
        <pubDate>Wed, 16 Dec 2015 23:00:00 +0800</pubDate>
        <link>bernersh.github.io/2015/12/16/welcome/</link>
        <guid isPermaLink="true">bernersh.github.io/2015/12/16/welcome/</guid>
        
        <category>Life</category>
        
        <category>FE2</category>
        
        
      </item>
    
  </channel>
</rss>
